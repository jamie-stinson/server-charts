type: statefulset
replicaCount: 1

podDisruptionBudget: 0
terminationGracePeriodSeconds: 10

containerEnvs:
  - name: POSTGRES_DB
    value: "postgres"
  - name: PGUSER
    value: "postgres"
  - name: POSTGRES_USER
    value: "postgres"
  - name: PGDATA
    value: "/var/lib/postgresql/data/pgdata"

containerEnvsSecret:
  - name: POSTGRES_PASSWORD
    key: password
    secret: postgres

containerArgs:
  - '-c', 'config_file=/etc/postgres.conf'

securityContext:
  user: 70

initContainers:
  - name: setup-replica-data-directory
    image: postgres:10.5
    
    env:
      - name: PGPASSWORD
        valueFrom:
          secretKeyRef:
            key: replicaPassword
            name: postgres

    command:
    - sh
    - -c
    - |
      if [ -z "$(ls -A /var/lib/postgresql/data/pgdata)" ]; then
          echo "Running pg_basebackup to catch up replication server...";
          pg_basebackup -R -h postgres -D /var/lib/postgresql/data/pgdata -P -U replication; 
          chown -R postgres:postgres $PGDATA;
      else
          echo "Skipping pg_basebackup because directory is not empty"; 
      fi

configMaps:
  - name: postgresql-cluster-config
    data:
      postgres.conf: |
        listen_addresses = '*'
        max_connections = 100
        shared_buffers = 128MB
        dynamic_shared_memory_type = posix
        log_timezone = 'UTC'
        datestyle = 'iso, mdy'
        timezone = 'UTC'
        lc_messages = 'en_US.utf8'
        lc_monetary = 'en_US.utf8'
        lc_numeric = 'en_US.utf8'
        lc_time = 'en_US.utf8'     
        default_text_search_config = 'pg_catalog.english'
        include_if_exists = 'master.conf'
        include_if_exists = 'replica.conf'
      replica.conf: |          
        hot_standby = on

probes:
  readiness:
    enabled: true
    type: "exec"
    execCommands: 
      - sh
      - -c
      - exec pg_isready --host $POD_IP
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
  liveness:
    enabled: true
    type: "exec"
    execCommands: 
      - sh
      - -c
      - exec pg_isready --host $POD_IP
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 6

resources:
  enabled: true
  requests:
    cpu: "100m"
    memory: "256Mi"
  limits:
    cpu: "100m"
    memory: "256Mi"
    gpu: "0"

image:
  registry: "docker.io"
  repository: "postgres"
  tag: "16.2-alpine"

service:
  enabled: true
  headless: true
  publishNotReadyAddresses: true
  clusterip:
    - name: client
      protocol: TCP
      port: 5432

storage:
  enabled: true
  volumes:
    - name: "config"
      type: "configMap"
      readOnly: true
      mountPath: "/etc"
      configMapName: "postgresql-cluster-config"
      items:
        - key: "postgres.conf"
          path: "postgres.conf"
        - key: "replica.conf"
          path: "replica.conf"     
    - name: datadir
      type: "template"
      accessModes:
      - ReadWriteOnce
      storageClass: "local-path"
      readOnly: false