{{- if eq .Values.database.postgresql.enabled true }}
{{- range .Values.database.postgresql.databases }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ printf "%s-%s" $.Release.Name . }}
spec:
  description: "{{ printf "%s-%s" $.Release.Name . }} Cluster"
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1
  instances: 3
  storage:
    size: 5Gi
    storageClass: local-path
  startDelay: 30
  stopDelay: 100
  primaryUpdateStrategy: unsupervised
  enableSuperuserAccess: false
  postgresql:
    parameters:
      max_connections: '200'
      shared_buffers: '256MB'
      effective_cache_size: '768MB'
      maintenance_work_mem: '64MB'
      checkpoint_completion_target: '0.9'
      wal_buffers: '7864kB'
      default_statistics_target: '100'
      random_page_cost: '1.1'
      effective_io_concurrency: '200'
      work_mem: '655kB'
      huge_pages: 'off'
      min_wal_size: '1GB'
      max_wal_size: '4GB'
    pg_hba:
    - host all all 0.0.0.0/0 scram-sha-256
  bootstrap:
    initdb:
      database: {{ printf "%s-%s" $.Release.Name . }}
      owner: {{ printf "%s-%s" $.Release.Name . }}
      secret:
        name: {{ printf "%s-%s" $.Release.Name . }}-database-credentials
      postInitApplicationSQL:
        - create schema {{ printf "%s-%s" $.Release.Name . }}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
  name: {{ printf "%s-%s" $.Release.Name . }}-database-credentials
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: password
data:
  username: {{ b64enc (printf "%s-%s" $.Release.Name .) }}
{{- end }}
{{- end }}
