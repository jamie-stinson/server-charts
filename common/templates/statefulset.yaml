{{- if eq .Values.type "statefulset" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
spec:
  {{- if .Values.service.clusterip }}
  serviceName: "{{ .Release.Name }}-clusterip"
  {{- end}}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            - name: PUID
              value: "556"
            - name: PGID
              value: "556"
            - name: TZ
              value: "GB"
            {{- if .Values.containerEnvs }}
            {{- range .Values.containerEnvs }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.containerEnvsConfigMap }}
            {{- range .Values.containerEnvsConfigMap }}
            - name: {{ .name }}
              valueFrom:
                configMapKeyRef:
                  name: {{ .configMap }}
                  key: {{ .name }}
            {{- end }}
            {{- end }}
          {{- if .Values.resources.enabled }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
              gpu: {{ .Values.resources.limits.gpu }}
          {{- end }}
          {{- if .Values.containerArgs }}
          args:
          {{- toYaml .Values.containerArgs | nindent 12 }}
          {{- end }}
          {{- if .Values.service.enabled }}
          ports:
            {{- if .Values.service.loadbalancer }}
            {{- range .Values.service.loadbalancer }}
            - name: {{ .name }}
              containerPort: {{ .port }}
            {{- end }}
            {{- end }}
            {{- if .Values.service.clusterip }}
            {{- range .Values.service.clusterip }}
            - name: {{ .name }}
              containerPort: {{ .port }}
            {{- end }}
            {{- end }}
          {{- end }}
          # Probes are kept as in the original deployment template
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            {{- if eq .Values.probes.readiness.type "tcp" }}
            tcpSocket:
              port: {{ .Values.probes.readiness.tcpPort }}
            {{- else if eq .Values.probes.readiness.type "http" }}
            httpGet:
              path: {{ .Values.probes.readiness.httpPath }}
              port: {{ .Values.probes.readiness.httpPort }}
            {{- else if eq .Values.probes.readiness.type "exec" }}
            exec:
              command:
                - {{ .Values.probes.readiness.execCommand }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}

          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            {{- if eq .Values.probes.liveness.type "tcp" }}
            tcpSocket:
              port: {{ .Values.probes.liveness.tcpPort }}
            {{- else if eq .Values.probes.liveness.type "http" }}
            httpGet:
              path: {{ .Values.probes.liveness.httpPath }}
              port: {{ .Values.probes.liveness.httpPort }}
            {{- else if eq .Values.probes.liveness.type "exec" }}
            exec:
              command:
                - {{ .Values.probes.liveness.execCommand }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}

          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            {{- if eq .Values.probes.startup.type "tcp" }}
            tcpSocket:
              port: {{ .Values.probes.startup.tcpPort }}
            {{- else if eq .Values.probes.startup.type "http" }}
            httpGet:
              path: {{ .Values.probes.startup.httpPath }}
              port: {{ .Values.probes.startup.httpPort }}
            {{- else if eq .Values.probes.startup.type "exec" }}
            exec:
              command:
                - {{ .Values.probes.startup.execCommand }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
            successThreshold: {{ .Values.probes.startup.successThreshold }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
          {{- end }}
          # Volume mounts and volumes section remains the same
          {{- if .Values.storage.enabled }}
          volumeMounts:
            {{- range .Values.storage.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
      volumes:
      {{- range .Values.storage.volumes }}
        - name: {{ .name }}
          {{- if eq .type "host" }}
          hostPath:
            path: {{ .hostPath }}
          {{- else if eq .type "emptyDir" }}
          emptyDir:
            {{- if .size }}
            sizeLimit: {{ .size }}
            {{- else }}
            emptyDir: {}
            {{- end }}
          {{- end }}
      {{- end }}
          {{- end }}
{{- end }}
